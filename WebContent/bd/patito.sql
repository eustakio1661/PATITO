DROP DATABASE IF EXISTS patito;
CREATE DATABASE patito;

USE patito;

CREATE TABLE TIPOEMPLEADO
(
    ID_TP       INT PRIMARY KEY AUTO_INCREMENT,
    DESCRIPCION VARCHAR(15) NOT NULL UNIQUE
);

CREATE TABLE DISTRITO
(
    ID_DIST  INT PRIMARY KEY,
    NOM_DIST VARCHAR(50) NOT NULL
);

CREATE TABLE EMPLEADO
(
    ID_EM     INT PRIMARY KEY AUTO_INCREMENT,
    DNI       CHAR(8)       NOT NULL UNIQUE,
    NOMBRE    VARCHAR(50)   NOT NULL,
    APELLIDO  VARCHAR(50)   NOT NULL,
    TELEFONO  VARCHAR(10)   NOT NULL UNIQUE,
    DIRECCION VARCHAR(150)  NOT NULL,
    CORREO    VARCHAR(100)  NOT NULL UNIQUE,
    USUARIO   VARCHAR(50)   NOT NULL UNIQUE,
    CLAVE     VARCHAR(50)   NOT NULL UNIQUE,
    ID_TP     INT           NOT NULL,
    ESTADO    TINYINT       NOT NULL,
    IMAGEN    VARCHAR(1000) NOT NULL DEFAULT 'https://res.cloudinary.com/dfuuywyk9/image/upload/v1621437436/l60Hf_megote.png',
    FOREIGN KEY (ID_TP) REFERENCES TIPOEMPLEADO (ID_TP)
);

CREATE TABLE CLIENTE
(
    ID_CLI    INT PRIMARY KEY AUTO_INCREMENT,
    ID_DIST   INT         NOT NULL,
    DNI_CLI   CHAR(8)     NOT NULL UNIQUE,
    NOM_CLI   VARCHAR(50) NOT NULL,
    APE_CLI   VARCHAR(50) NOT NULL,
    DIR_CLI   VARCHAR(50) NOT NULL,
    TELEF_CLI VARCHAR(15) UNIQUE,
    ESTADO    TINYINT     NOT NULL DEFAULT 1,
    FOREIGN KEY (ID_DIST) references DISTRITO (ID_DIST)

);

CREATE TABLE CATEGORIA
(
    ID_CA       INT PRIMARY KEY AUTO_INCREMENT,
    DESCRIPCION VARCHAR(30) NOT NULL UNIQUE
);

CREATE TABLE PRODUCTO
(
    ID_PRO      INT PRIMARY KEY AUTO_INCREMENT,
    DESCRIPCION VARCHAR(100)  NOT NULL UNIQUE,
    PRECIO      DECIMAL(6, 2) NOT NULL CHECK (PRECIO > 0),
    CANTIDAD    TINYINT       NOT NULL CHECK (CANTIDAD >= 0),
    ID_CA       INT           NOT NULL,
    IMAGEN      VARCHAR(1000) NULL,
    ESTADO      TINYINT       NOT NULL DEFAULT 1,
    FOREIGN KEY (ID_CA) REFERENCES CATEGORIA (ID_CA)
);

CREATE TABLE PEDIDO
(
    ID_PE          INT AUTO_INCREMENT,
    ID_EM          INT     NOT NULL,
    ID_CLI         INT     NOT NULL,
    FECHA_PE       DATE    NOT NULL,
    FECHA_EN       DATE    NULL,
    CANTIDAD_TOTAL TINYINT NOT NULL CHECK (CANTIDAD_TOTAL >= 0),
    PRIMARY KEY (ID_PE, ID_EM, ID_CLI),
    FOREIGN KEY (ID_EM) REFERENCES EMPLEADO (ID_EM),
    FOREIGN KEY (ID_CLI) REFERENCES CLIENTE (ID_CLI)
);
CREATE TABLE DETALLE_PEDIDO
(
    ID_PE    INT           NOT NULL,
    ID_PRO   INT           NOT NULL,
    PRECIO   DECIMAL(6, 2) NOT NULL CHECK (PRECIO > 0),
    CANTIDAD TINYINT       NOT NULL CHECK (CANTIDAD >= 0),
    FOREIGN KEY (ID_PE) REFERENCES PEDIDO (ID_PE),
    FOREIGN KEY (ID_PRO) REFERENCES PRODUCTO (ID_PRO)
);

CREATE TABLE BOLETA
(
    ID_PE     INT           NOT NULL,
    ID_BOL    CHAR(11)      NOT NULL,
    PRETOTAL  DECIMAL(6, 2) NOT NULL,
    DESCUENTO DECIMAL(6, 2) NOT NULL,
    PRIMARY KEY (ID_BOL),
    FOREIGN KEY (ID_PE) REFERENCES DETALLE_PEDIDO (ID_PE)
);

/*PROCEDIMIENTO ALMACENADO PARA EL LISTADO DE LOS EMPLEADOS*/
DROP PROCEDURE IF EXISTS USP_LISTADOEMPLEADO;
DELIMITER $$
CREATE PROCEDURE USP_LISTADOEMPLEADO()
BEGIN
    SELECT E.ID_EM,
           E.DNI,
           E.NOMBRE,
           E.APELLIDO,
           E.TELEFONO,
           E.DIRECCION,
           E.CORREO,
           E.USUARIO,
           E.CLAVE,
           TE.ID_TP,
           E.ESTADO,
           E.IMAGEN
    FROM EMPLEADO AS E
             INNER JOIN TIPOEMPLEADO AS TE
                        ON E.ID_TP = TE.ID_TP;
END$$
DELIMITER ;


/*PROCEDIMIENTO ALMACENADO PARA INSERTAR EMPLEADOS
DROP PROCEDURE IF EXISTS USP_INSERTAREMPLEADO;
DELIMITER $$
CREATE PROCEDURE USP_INSERTAREMPLEADO(
ID INT, DNI CHAR(8), NOM VARCHAR(50), APE VARCHAR(50), TELEF VARCHAR(10),
USU VARCHAR(50), CLAVE VARCHAR(50), TIPO INT, ESTADO TINYINT, IMG VARCHAR(1000)
)
BEGIN

 DECLARE EXIT HANDLER FOR 1062
    BEGIN
 	SELECT CONCAT('LLAVE DUPLICADA DNI = ',DNI,' Y/O USUARIO = ',USU,' CORREGIR') AS MESSAGE;
    END;

INSERT INTO EMPLEADO VALUES(ID,DNI,NOM,APE,TELEF,USU,CLAVE,TIPO,ESTADO,IMG);
END$$
DELIMITER ;
*/

/*PROCEDIMIENTO ALMACENADO PARA ACTUALIZAR EMPLEADOS*/
DROP PROCEDURE IF EXISTS USP_ACTUALIZAREMPLEADO;
DELIMITER $$
CREATE PROCEDURE USP_ACTUALIZAREMPLEADO(
    ID INT, DNI CHAR(8), NOM VARCHAR(50), APE VARCHAR(50), TELEF VARCHAR(10), DIRE VARCHAR(150), CORREO VARCHAR(100),
    USU VARCHAR(50), CLAVE VARCHAR(50), TIPO INT, ESTADO TINYINT, IMG VARCHAR(1000)
)
BEGIN
    UPDATE EMPLEADO
    SET DNI       = DNI,
        NOMBRE    = NOM,
        APELLIDO  = APE,
        TELEFONO  = TELEF,
        DIRECCION = DIRE,
        CORREO    = CORREO,
        USUARIO   = USU,
        CLAVE     = CLAVE,
        ID_TP     = TIPO,
        ESTADO    = ESTADO,
        IMAGEN    = IMG
    WHERE ID_EM = ID;
END$$
DELIMITER ;

/*PROCEDIMIENTO ALMACENADO PARA ELIMINAR EMPLEADOS*/
DROP PROCEDURE IF EXISTS USP_ELIMINAREMPLEADO;
DELIMITER $$
CREATE PROCEDURE USP_ELIMINAREMPLEADO(
    ID INT
)
BEGIN
    UPDATE EMPLEADO
    SET ESTADO = 0
    WHERE ID_EM = ID;
END$$
DELIMITER ;

/*PROCEDIMIENTO ALMACENADO PARA VALIDAR ACCESO*/
DROP PROCEDURE IF EXISTS USP_VALIDARACCESO;
DELIMITER $$
CREATE PROCEDURE USP_VALIDARACCESO(USR VARCHAR(100), PAS VARCHAR(50))
BEGIN
    SELECT * FROM EMPLEADO WHERE (CORREO = USR OR USUARIO = USR) AND CLAVE = PAS AND ESTADO = 1;
END$$
DELIMITER ;

/*PROCEDIMIENTO ALMACENADO PARA EL REGISTRO DE LOS PRODUCTOS*/
DROP PROCEDURE IF EXISTS USP_REGISTRARPRODUCTO;
DELIMITER $$
CREATE PROCEDURE USP_REGISTRARPRODUCTO(DESCP VARCHAR(100), PRE DECIMAL(6, 2), CANT TINYINT, CATEGORIA INT,
                                       IMG VARCHAR(1000)
)
BEGIN
    INSERT INTO PRODUCTO(DESCRIPCION, PRECIO, CANTIDAD, ID_CA, IMAGEN) VALUES (DESCP, PRE, CANT, CATEGORIA, IMG);
END$$
DELIMITER ;

/*INSERT INTO CATEGORIA VALUES(1,'Almuerzo');
CALL USP_REGISTRARPRODUCTO('SOPA SECA',23.4,10,1,'https://res.cloudinary.com/dfuuywyk9/image/upload/v1621437436/l60Hf_megote.png');
select * from PRODUCTOS;*/

/*PROCEDIMIENTO ALMACENADO PARA EL REGISTRO DE LOS PRODUCTOS*/
DROP PROCEDURE IF EXISTS USP_ACTUALIZARPRODUCTO;
DELIMITER $$
CREATE PROCEDURE USP_ACTUALIZARPRODUCTO(IDPROD INT, DESCR VARCHAR(100), PRE DECIMAL(6, 2), CANT TINYINT, IDCAT INT,
                                        IMG VARCHAR(1000))
BEGIN
    UPDATE PRODUCTO
    SET DESCRIPCION = DESCR,
        PRECIO      = PRE,
        CANTIDAD    = CANT,
        ID_CA       = IDCAT,
        IMAGEN      = IMG
    WHERE ID_PRO = IDPROD;
END$$
DELIMITER ;
/*CALL USP_ACTUALIZARPRODUCTO(1,'SOPA DE CUY',23.4,10,1,'https://res.cloudinary.com/dfuuywyk9/image/upload/v1621437436/l60Hf_megote.png');
select * from PRODUCTOS;*/
/*PROCEDIMIENTO ALMACENADO PARA ELIMINAR PRODUCTOS*/
DROP PROCEDURE IF EXISTS USP_ELIMINARPRODUCTO;
DELIMITER $$
CREATE PROCEDURE USP_ELIMINARPRODUCTO(PRO INT)
BEGIN
    UPDATE PRODUCTO SET ESTADO = 0 WHERE ID_PRO = PRO;
END$$
DELIMITER ;
/*CALL USP_REGISTRARPRODUCTO('SOPA SECA',23.4,10,1,'https://res.cloudinary.com/dfuuywyk9/image/upload/v1621437436/l60Hf_megote.png');
CALL USP_ELIMINARPRODUCTO(2);
select * from PRODUCTO;*/
/*PROCEDIMIENTO ALMACENADO PARA EL LISTADO DE LOS EMPLEADOS*/
DROP PROCEDURE IF EXISTS USP_LISTADOPRODUCTOS;
DELIMITER $$
CREATE PROCEDURE USP_LISTADOPRODUCTOS()
BEGIN
    SELECT P.ID_PRO, P.DESCRIPCION, P.PRECIO, P.CANTIDAD, P.ID_CA, C.DESCRIPCION
    FROM PRODUCTO AS P
             INNER JOIN CATEGORIA C
                        ON P.ID_CA = C.ID_CA
    ORDER BY P.ESTADO DESC;
END$$
DELIMITER ;

CALL USP_LISTADOPRODUCTOS;

INSERT INTO TIPOEMPLEADO
VALUES (1, 'admin');
/*INSERT INTO EMPLEADO VALUES (1,'99999999','Jhon','Doe','999999999','JhonDoe@gmail.com','99999','99999',1,1,'https://i.pinimg.com/originals/b0/82/c0/b082c01b099e8a0e8bd6a50c2b06e135.png');*/

/*USP LISTAR CLIENTE POR DISTRITO*/

DROP PROCEDURE IF EXISTS USP_ClientexDistrito;
DELIMITER $$
CREATE PROCEDURE USP_ClientexDistrito()
BEGIN
    SELECT C.ID_CLI,
           C.DNI_CLI,
           C.NOM_CLI,
           C.APE_CLI,
           C.DIR_CLI,
           C.TELEF_CLI,
           D.ID_DIST,
           D.NOM_DIST
    FROM CLIENTE AS C
             INNER JOIN DISTRITO AS D ON C.ID_DIST = D.ID_DIST;
END $$
DELIMITER ;

CALL USP_ClientexDistrito();

DROP PROCEDURE IF EXISTS USP_ELIMINARCLIENTE;
DELIMITER $$
CREATE PROCEDURE USP_ELIMINARCLIENTE(CLI INT)
BEGIN
    UPDATE CLIENTE SET ESTADO = 0 WHERE ID_CLI = CLI;
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS USP_ACTUALIZARCLIENTE;
DELIMITER $$
CREATE PROCEDURE USP_ACTUALIZARCLIENTE(
    IDC INT,
    IDD INT,
    DNI CHAR(8),
    NOM VARCHAR(50),
    APE VARCHAR(50),
    DIR VARCHAR(50),
    TELE VARCHAR(15)
)
BEGIN
    UPDATE CLIENTE
    SET NOM_CLI   = NOM,
        APE_CLI   = APE,
        TELEF_CLI = TELE,
        DNI_CLI   = DNI,
        ID_DIST   = IDD,
        DIR_CLI   = DIR
    WHERE ID_CLI = IDC;
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS USP_REGISTRARCLIENTE;
DELIMITER $$
CREATE PROCEDURE USP_REGISTRARCLIENTE(
    DISTRITO INT,
    DNI CHAR(8),
    NOM VARCHAR(50),
    APE VARCHAR(50),
    DIR VARCHAR(50),
    TELE VARCHAR(15)
)
BEGIN
    INSERT INTO CLIENTE(ID_DIST, DNI_CLI, NOM_CLI, APE_CLI, DIR_CLI, TELEF_CLI)
    VALUES (DISTRITO, DNI, NOM, APE, DIR, TELE);
END$$
DELIMITER ;

INSERT INTO DISTRITO
values (1, 'Cercado de Lima');
INSERT INTO DISTRITO
values (2, 'Ate');
INSERT INTO DISTRITO
values (3, 'Barranco');
INSERT INTO DISTRITO
values (4, 'Breña');
INSERT INTO DISTRITO
values (5, 'Comas');
INSERT INTO DISTRITO
values (6, 'Chorrillos');
INSERT INTO DISTRITO
values (7, 'El Agustino');
INSERT INTO DISTRITO
values (8, 'Jesús María');
INSERT INTO DISTRITO
values (9, 'La Molina');
INSERT INTO DISTRITO
values (10, 'La Victoria');
INSERT INTO DISTRITO
values (11, 'Lince');
INSERT INTO DISTRITO
values (12, 'Magdalena del Mar');
INSERT INTO DISTRITO
values (13, 'Miraflores');
INSERT INTO DISTRITO
values (14, 'Pueblo Libre');
INSERT INTO DISTRITO
values (15, 'Puente Piedra');
INSERT INTO DISTRITO
values (16, 'Rimac');
INSERT INTO DISTRITO
values (17, 'San Isidro');
INSERT INTO DISTRITO
values (18, 'Independencia');
INSERT INTO DISTRITO
values (19, 'San Juan de Miraflores');
INSERT INTO DISTRITO
values (20, 'San Luis');
INSERT INTO DISTRITO
values (21, 'San Martin de Porres');
INSERT INTO DISTRITO
values (22, 'San Miguel');
INSERT INTO DISTRITO
values (23, 'Santiago de Surco');
INSERT INTO DISTRITO
values (24, 'Surquillo');
INSERT INTO DISTRITO
values (25, 'Villa María del Triunfo');
INSERT INTO DISTRITO
values (26, 'San Juan de Lurigancho');
INSERT INTO DISTRITO
values (27, 'Santa Rosa');
INSERT INTO DISTRITO
values (28, 'Los Olivos');
INSERT INTO DISTRITO
values (29, 'Los Olivos');
INSERT INTO DISTRITO
values (30, 'Villa El Savador');
INSERT INTO DISTRITO
values (31, 'Santa Anita');

CALL USP_REGISTRARCLIENTE(1, '72571636', 'Andres', 'Cervantes', 'Av. Bolivar 112', '945894384');
CALL USP_REGISTRARCLIENTE(2, '34982382', 'Julio', 'Garcia', 'Av. Buckingham V Lt5', '934348544');
CALL USP_REGISTRARCLIENTE(3, '98123843', 'Leo', 'Galvez', 'Av. Materiales 2915', '994584585');
CALL USP_REGISTRARCLIENTE(4, '87123484', 'Adrian', 'Buleje', 'Av. Arriba Perú 1154', '978621178');
CALL USP_REGISTRARCLIENTE(5, '39874789', 'Marcelo', 'Agachate Conocelo', 'Jirón Puno,3721', '943678347');
CALL USP_REGISTRARCLIENTE(6, '98349823', 'Pedro', 'Castillo', 'Av. La Paz 356 Of. 405', '934734433');
CALL USP_REGISTRARCLIENTE(7, '78237832', 'Jose', 'Lurita', 'Av. Perú 1240 Km 12', '984378934');
CALL USP_REGISTRARCLIENTE(8, '98438934', 'Daniel', 'Esteban', 'Calle Los Naranjos 174', '934438974');
CALL USP_REGISTRARCLIENTE(9, '23982389', 'Matias', 'Sosa', 'Jr. Belén 555', '948347384');
CALL USP_REGISTRARCLIENTE(10, '23289389', 'Ricardo', 'Robles', 'Los Algarrobos 253', '974337344');

